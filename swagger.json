{
  "swagger": "2.0",
  "info": {
    "title": "Yo-Recipes API",
    "description": "A REST API for managing recipes",
    "version": "1.0.0"
  },
  "host": "https://yo-recipes-api.onrender.com",
  "basePath": "/api",
  "tags": [
    {
      "name": "Recipes",
      "description": "Endpoints for managing recipes"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/v1/recipes": {
      "get": {
        "tags": [
          "Recipes"
        ],
        "summary": "Get all recipes",
        "description": "Endpoint to retrieve all recipes",
        "responses": {
          "200": {
            "description": "Successfully retrieved all recipes",
            "schema": {
              "$ref": "#/definitions/RecipeList"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Recipes"
        ],
        "summary": "Create a new recipe",
        "description": "Endpoint to create a new recipe",
        "parameters": [
          {
            "name": "RecipeModel",
            "in": "body",
            "description": "Recipe information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RecipeInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/recipes/{id}": {
      "get": {
        "tags": [
          "Recipes"
        ],
        "summary": "Get a recipe by ID",
        "description": "Endpoint to retrieve a specific recipe by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Recipe ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the recipe",
            "schema": {
              "$ref": "#/definitions/Recipe"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Recipes"
        ],
        "summary": "Update a recipe",
        "description": "Endpoint to update an existing recipe",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Recipe ID"
          },
          {
            "name": "RecipeModel",
            "in": "body",
            "description": "Recipe information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RecipeInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Recipes"
        ],
        "summary": "Delete a recipe",
        "description": "Endpoint to delete a recipe",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Recipe ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all users",
        "description": "Endpoint to retrieve all users",
        "responses": {
          "200": {
            "description": "Successfully retrieved all users",
            "schema": {
              "$ref": "#/definitions/UserList"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create user",
        "description": "Endpoint to create a new user",
        "parameters": [
          {
            "name": "UserModel",
            "in": "body",
            "description": "User information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get a user by ID",
        "description": "Endpoint to retrieve user data by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved user data",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update a user",
        "description": "Endpoint to update an existing user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User ID"
          },
          {
            "name": "UserModel",
            "in": "body",
            "description": "User information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete a user",
        "description": "Endpoint to delete a user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "Recipe": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "64a7b2f5e4b0c8a1d2f3e4b5"
        },
        "title": {
          "type": "string",
          "example": "Spaghetti Carbonara"
        },
        "ingredients": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "item": {
                "type": "string",
                "example": "spaghetti"
              },
              "amount": {
                "type": "string",
                "example": "400g"
              }
            }
          }
        },
        "instructions": {
          "type": "array",
          "example": [
            "Boil the spaghetti in salted water"
          ],
          "items": {
            "type": "string"
          }
        },
        "cookingTime": {
          "type": "number",
          "example": 30
        },
        "difficulty": {
          "type": "string",
          "example": "easy"
        },
        "servings": {
          "type": "number",
          "example": 4
        },
        "updatedAt": {
          "type": "string",
          "example": "2024-06-25T12:00:00Z"
        },
        "createdAt": {
          "type": "string",
          "example": "2024-06-20T12:00:00Z"
        }
      }
    },
    "RecipeInput": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "example": "64a7b2f5e4b0c8a1d2f3e4b5"
        },
        "title": {
          "type": "string",
          "example": "Spaghetti Carbonara"
        },
        "ingredients": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "item": {
                "type": "string",
                "example": "spaghetti"
              },
              "amount": {
                "type": "string",
                "example": "400g"
              }
            },
            "required": [
              "item",
              "amount"
            ]
          }
        },
        "instructions": {
          "type": "array",
          "example": [
            "Boil the spaghetti in salted water"
          ],
          "items": {
            "type": "string"
          }
        },
        "cookingTime": {
          "type": "number",
          "example": 30
        },
        "difficulty": {
          "type": "string",
          "example": "easy"
        },
        "servings": {
          "type": "number",
          "example": 4
        }
      },
      "required": [
        "userId",
        "title",
        "ingredients",
        "instructions",
        "cookingTime",
        "difficulty",
        "servings"
      ]
    },
    "RecipeList": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "64a7b2f5e4b0c8a1d2f3e4b5"
          },
          "title": {
            "type": "string",
            "example": "Spaghetti Carbonara"
          },
          "ingredients": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "item": {
                  "type": "string",
                  "example": "spaghetti"
                },
                "amount": {
                  "type": "string",
                  "example": "400g"
                }
              }
            }
          },
          "instructions": {
            "type": "array",
            "example": [
              "Boil the spaghetti in salted water"
            ],
            "items": {
              "type": "string"
            }
          },
          "cookingTime": {
            "type": "number",
            "example": 30
          },
          "difficulty": {
            "type": "string",
            "example": "easy"
          },
          "servings": {
            "type": "number",
            "example": 4
          },
          "updatedAt": {
            "type": "string",
            "example": "2024-06-25T12:00:00Z"
          },
          "createdAt": {
            "type": "string",
            "example": "2024-06-20T12:00:00Z"
          }
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "64a7b2f5e4b0c8a1d2f3e4b5"
        },
        "name": {
          "type": "string",
          "example": "John"
        },
        "surname": {
          "type": "string",
          "example": "Doe"
        },
        "email": {
          "type": "string",
          "example": "jdoe@byupathway.edu"
        },
        "level": {
          "type": "string",
          "example": "amateur"
        },
        "age": {
          "type": "number",
          "example": 25
        }
      }
    },
    "UserInput": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "John"
        },
        "surname": {
          "type": "string",
          "example": "Doe"
        },
        "email": {
          "type": "string",
          "example": "jdoe@byupathway.edu"
        },
        "level": {
          "type": "string",
          "example": "amateur"
        },
        "age": {
          "type": "number",
          "example": 25
        }
      },
      "required": [
        "name",
        "surname",
        "email",
        "level",
        "age"
      ]
    },
    "UserList": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "64a7b2f5e4b0c8a1d2f3e4b5"
          },
          "name": {
            "type": "string",
            "example": "John"
          },
          "surname": {
            "type": "string",
            "example": "Doe"
          },
          "email": {
            "type": "string",
            "example": "jdoe@byupathway.edu"
          },
          "level": {
            "type": "string",
            "example": "amateur"
          },
          "age": {
            "type": "number",
            "example": 25
          }
        }
      }
    }
  }
}